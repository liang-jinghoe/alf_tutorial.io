name: build

on: [push, pull_request]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                postgresql: ['10', '15','16']
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: ~/.gradle/caches
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            - uses: actions/cache@v3
              with:
                  path: ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
                  restore-keys: |
                      ${{ runner.os }}-gradlew-
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: temurin
            - name: Build with Gradle
              run: ./gradlew build distribution jacocoTestReport -Dpgsql.version=${{ matrix.postgresql }}
            - name: Upload coverage to Codecov
              if: ${{ matrix.postgresql == '16'}}
              uses: codecov/codecov-action@v5
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
            - name: Upload test results to Codecov
              if: ${{ !cancelled() && matrix.postgresql == '16'}}
              uses: codecov/test-results-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
            - name: 'Upload Build'
              if: ${{ github.repository == 'liang-jinghoe/alf_tutorial.io' && matrix.postgresql == '10'}}
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: build
                  retention-days: 5
    push_image_dev:
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'liang-jinghoe/alf_tutorial.io' && github.event_name == 'push' }}
        needs: build
        name: Push dev image
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  name: dist
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v2
            -   name: Configure Docker
                uses: docker/setup-buildx-action@v2
            -   name: Login to Container Registry
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ secrets.CR_USER }}
                    password: ${{ secrets.CR_PAT }}
            -   name: Inject slug/short variables
                uses: rlespinasse/github-slug-action@v4
            -   name: Push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: ./dockerize
                    tags: |
                        ghcr.io/liang-jinghoe/alf_tutorial.io/dev-${{ env.GITHUB_REF_SLUG }}:latest
                    platforms: linux/amd64,linux/arm64
                    push: true
    push_image_prod:
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'liang-jinghoe/alf_tutorial.io' && github.event_name == 'push' }}
        needs: build
        name: Push PROD image
        steps:
            -   name: Download artifacts
                uses: actions/download-artifact@v4
                with:
                    name: dist
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v2
            -   name: Configure Docker
                uses: docker/setup-buildx-action@v2
            -   name: Login to Container Registry (GitHub)
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ secrets.CR_USER }}
                    password: ${{ secrets.CR_PAT }}
            -   name: Login to Container Registry (Docker)
                uses: docker/login-action@v2
                with:
                    registry: docker.io
                    username: 2205097
                    password: 040708-10-0055
            -   name: Push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: ./dockerize
                    tags: |
                        ghcr.io/liang-jinghoe/alf_tutorial.io:latest
                        ghcr.io/liang-jinghoe/alf_tutorial.io:${{ github.ref_name }}
                    platforms: linux/amd64,linux/arm64
                    push: true
    deploy:
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'liang-jinghoe/alf_tutorial.io' }}
        needs: push_image_prod
        name: Deploy with Docker Compose
        steps:
        -   name: Checkout repo
            uses: actions/checkout@v4

        -   name: Login to Container Registry (GitHub)
            uses: docker/login-action@v2
            with:
                registry: ghcr.io
                username: ${{ secrets.CR_USER }}
                password: ${{ secrets.CR_PAT }}

        -   name: Login to Container Registry (Docker)
            uses: docker/login-action@v2
            with:
                registry: docker.io
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

        -   name: Deploy containers
            run: |
                docker compose -f docker-compose.yml pull
                docker compose -f docker-compose.yml up -d

        -   name: List running containers
            run: docker ps -a

        -   name: Wait for Alf.io to be ready
            run: |
                for i in {1..30}; do
                    if docker exec alfsccio-app sh -c 'nc -z localhost 8080'; then
                        echo "Alf.io is up!"
                        exit 0
                    fi
                    echo "Waiting for Alf.io to start..."
                    sleep 5
                done
                echo "Alf.io did not start in time" && exit 1
            
        -   name: Dump Alf.io logs
            run: |
                mkdir -p alfio-logs
                docker logs alfsccio-app > alfio-logs/stdout.log 2>&1
            
        -   name: Upload Alf.io logs
            uses: actions/upload-artifact@v4
            with:
                name: alfio-logs
                path: alfio-logs
                retention-days: 7
        
        -   name: Dump Postgres log file
            run: |
                mkdir -p postgres-logs
                docker logs alf_tutorialio-db-1 > postgres-logs/stdout.log 2>&1
        
        -   name: Upload Postgres logs as artifact
            uses: actions/upload-artifact@v4
            with:
                name: postgres-logs
                path: postgres-logs
                retention-days: 7
